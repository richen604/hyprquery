name: CMake on a single platform

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v4

      - name: Set up cache for build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache
            build
          key: ${{ runner.os }}-build-${{ env.BUILD_TYPE }}-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.BUILD_TYPE }}-

      - name: Install GCC 13
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
          sudo apt-get update
          sudo apt-get install -y gcc-13 g++-13
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 13
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-13 13

      - name: Install CMake
        uses: jwlawson/actions-setup-cmake@v2

      - name: Install spdlog
        run: sudo apt-get install -y libspdlog-dev

      - name: Install pixman
        run: sudo apt-get install -y libpixman-1-dev

      - name: Build and install hyprutils
        run: |
          git clone --depth=1 https://github.com/hyprwm/hyprutils.git
          cd hyprutils
          cmake --no-warn-unused-cli -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -S . -B build
          cmake --build build --config Release --target hyprutils -j$(nproc)
          sudo cmake --install build

      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}

      - name: Patch hyprlang to remove <print> include and std::print usage
        run: |
          find build/_deps/hyprlang-src/ -type f -name '*.hpp' -exec sed -i 's|#include <print>|// #include <print>|' {} +
          find build/_deps/hyprlang-src/ -type f -name '*.hpp' -exec sed -i 's|std::print|// std::print|' {} +
          find build/_deps/hyprlang-src/ -type f -name '*.cpp' -exec sed -i 's|std::print|// std::print|' {} +

      - name: Build
        run: cmake --build build --config ${{ env.BUILD_TYPE }} -- -j$(nproc)

      - name: Test
        working-directory: build
        run: ctest --output-on-failure -C ${{ env.BUILD_TYPE }}

      - name: Upload build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: build/

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload release assets
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: build/**/*
